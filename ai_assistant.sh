#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π AI –ø–æ–º–æ—â–Ω–∏–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π DeepSeek –∏ OpenAI
CONFIG_FILE="$HOME/.bin/ai_config.conf"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if [ ! -f "$CONFIG_FILE" ]; then
    notify-send "‚ùå AI –ü–æ–º–æ—â–Ω–∏–∫" "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $CONFIG_FILE" --icon="dialog-error"
    exit 1
fi

# –ß–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
source "$CONFIG_FILE"

# –í—ã–±–∏—Ä–∞–µ–º API –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
case "$ACTIVE_API" in
    "deepseek")
        API_KEY="$DEEPSEEK_API_KEY"
        API_URL="$DEEPSEEK_API_URL"
        MODEL="$DEEPSEEK_MODEL"
        WINDOW_TITLE="DeepSeek AI"
        ;;
    "openai")
        API_KEY="$OPENAI_API_KEY"
        API_URL="$OPENAI_API_URL"
        MODEL="$OPENAI_MODEL"
        WINDOW_TITLE="OpenAI GPT"
        ;;
    *)
        notify-send "‚ùå AI –ü–æ–º–æ—â–Ω–∏–∫" "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π API: $ACTIVE_API. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: deepseek, openai" --icon="dialog-error"
        exit 1
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
if [ -z "$API_KEY" ]; then
    notify-send "‚ùå AI –ü–æ–º–æ—â–Ω–∏–∫" "API –∫–ª—é—á –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è $ACTIVE_API –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" --icon="dialog-error"
    exit 1
fi

# # –£–ª—É—á—à–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ zenity —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# if command -v gsettings &>/dev/null; then
#     # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É GTK
#     SYSTEM_THEME=$(gsettings get org.gnome.desktop.interface gtk-theme 2>/dev/null | tr -d "'")
#     ICON_THEME=$(gsettings get org.gnome.desktop.interface icon-theme 2>/dev/null | tr -d "'")
#     if [ -n "$SYSTEM_THEME" ]; then
#         export GTK_THEME="$SYSTEM_THEME"
#     fi
#     if [ -n "$ICON_THEME" ]; then
#         export GTK_ICON_THEME="$ICON_THEME"
#     fi
# fi

# # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
# format_text_with_padding() {
#     local text="$1"
#     local padding="$2"
#     [ -z "$padding" ] && padding="    "
#     echo -e "\n$padding$text\n"
# }

# –ü–æ–ª—É—á–∏—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç (primary selection)
CONTEXT=$(xclip -o -selection primary 2>/dev/null)
# –ï—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî –≤–∑—è—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
if [ -z "$CONTEXT" ]; then
    CONTEXT=$(xclip -o -selection clipboard 2>/dev/null)
fi

# –û—Ñ–æ—Ä–º–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –¥–∏–∞–ª–æ–≥ (—É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ \n)
if [ -n "$CONTEXT" ]; then
    CONTEXT="$CONTEXT"
fi

# –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–∏–∞–ª–æ–≥–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç (—Ç–æ–ª—å–∫–æ Zenity)
DIALOG_TOOL=""
if command -v zenity &>/dev/null; then
    DIALOG_TOOL="zenity"
else
    notify-send "‚ùå AI –ü–æ–º–æ—â–Ω–∏–∫" "–¢—Ä–µ–±—É–µ—Ç—Å—è zenity –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install zenity" --icon="dialog-error"
    exit 1
fi

# –î–∏–∞–ª–æ–≥ –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ (–∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø—Ä–æ–º–ø—Ç –≤ –æ–¥–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏)
USER_INPUT=""


# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤–≤–æ–¥–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
USER_INPUT=$(zenity --text-info --editable --title="ü§ñ $WINDOW_TITLE" \
    --width=$WINDOW_WIDTH --height=$WINDOW_HEIGHT \
    --ok-label="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å" --cancel-label="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å" \
    --window-icon="applications-development" <<< "$CONTEXT")

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –≤–≤–æ–¥ ‚Äî –≤—ã—Ö–æ–¥
if [ -z "$USER_INPUT" ]; then
    notify-send "ü§ñ $WINDOW_TITLE" "–í–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω –∏–ª–∏ –ø—É—Å—Ç." --icon="dialog-information"
    exit 0
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—Å –±–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º)
# notify-send -t 10000 "DeepSeek" "–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å... –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
show_progress_dialog() {
    # –ü—É–ª—å—Å–∏—Ä—É—é—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å —ç–º–æ–¥–∑–∏ –∏ –ª—É—á—à–∏–º —Ç–µ–∫—Å—Ç–æ–º
    (
        while true; do
  
            echo "# üß† AI –¥—É–º–∞–µ—Ç –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º..."
  
        done
    ) | zenity --progress --title="ü§ñ $WINDOW_TITLE" --text="–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å..." \
        --pulsate --no-cancel --window-icon="applications-development" &
    PROGRESS_PID=$!
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
show_progress_dialog

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
send_api_request() {
    local user_input="$1"
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –≤–≤–æ–¥–µ
    local user_input_escaped=$(echo "$user_input" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed 's/$/\\n/' | tr -d '\n' | sed 's/\\n$//')

    # –°–æ–∑–¥–∞–µ–º JSON –∑–∞–ø—Ä–æ—Å
    local json_request=$(jq -n \
      --arg model "$MODEL" \
      --arg content "$user_input" \
      '{
        "model": $model,
        "messages": [{"role": "user", "content": $content}]
      }')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –æ—Ç–≤–µ—Ç, —Ç–∞–∫ –∏ HTTP —Å—Ç–∞—Ç—É—Å
    local temp_response=$(mktemp)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–¥–µ–ª—å–Ω–æ
    local http_status=$(curl -sS -o "$temp_response" -w "%{http_code}" -X POST "$API_URL" \
        -H "Authorization: Bearer $API_KEY" \
        -H "Content-Type: application/json" \
        -d "$json_request")

    # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
    local response=$(cat "$temp_response")
    rm -f "$temp_response"
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏ –æ—Ç–≤–µ—Ç
    echo "$http_status|$response"
}

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
API_RESULT=$(send_api_request "$USER_INPUT")

# –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ
if [[ "$API_RESULT" == *"|"* ]]; then
    HTTP_STATUS="${API_RESULT%%|*}"  # –í—Å–µ –¥–æ –ø–µ—Ä–≤–æ–π |
    RESPONSE="${API_RESULT#*|}"      # –í—Å–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π |
else
    # –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –Ω–µ—Ç, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –æ—à–∏–±–∫–æ–π
    HTTP_STATUS="000"
    RESPONSE="$API_RESULT"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
if [ ! -z "$PROGRESS_PID" ]; then
    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏ –≤—Å–µ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    kill -TERM $PROGRESS_PID 2>/dev/null
    pkill -P $PROGRESS_PID 2>/dev/null
    sleep 0.1
    kill -KILL $PROGRESS_PID 2>/dev/null
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∏–∞–ª–æ–≥–∏
    pkill -f "zenity.*progress" 2>/dev/null
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞
# notify-send -t 3000 "DeepSeek" "–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
echo "$RESPONSE" > /tmp/ai_response.json

# –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP —Å—Ç–∞—Ç—É—Å
if [ "$HTTP_STATUS" != "200" ]; then
    # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞
    if command -v jq &>/dev/null && [ -n "$RESPONSE" ]; then
        ERROR_DETAIL=$(echo "$RESPONSE" | jq -r '.error.message // .message // empty' 2>/dev/null)
        if [ -n "$ERROR_DETAIL" ]; then
            notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞ HTTP $HTTP_STATUS: $ERROR_DETAIL" --icon="dialog-error"
        else
            notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞ HTTP $HTTP_STATUS. –û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ /tmp/ai_response.json" --icon="dialog-error"
        fi
    else
        notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞ HTTP $HTTP_STATUS. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ." --icon="dialog-error"
    fi
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã –æ—Ç–≤–µ—Ç
if [ -z "$RESPONSE" ]; then
    notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞." --icon="dialog-error"
    exit 1
fi

# –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç (jq –Ω—É–∂–µ–Ω!)
ANSWER=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –æ—Ç–≤–µ—Ç–µ
if [ -z "$ANSWER" ] || [ "$ANSWER" = "null" ]; then
    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    ERROR_MSG=$(echo "$RESPONSE" | jq -r '.error.message // empty')
    
    # –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Å—å –æ—Ç–≤–µ—Ç
    if [ -z "$ERROR_MSG" ]; then
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ choices
        CHOICES_CHECK=$(echo "$RESPONSE" | jq '.choices')
        if [ "$CHOICES_CHECK" = "null" ] || [ -z "$CHOICES_CHECK" ]; then
            notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /tmp/ai_response.json" --icon="dialog-error"
        else
            notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞: –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏" --icon="dialog-error"
        fi
    else
        notify-send "‚ùå $WINDOW_TITLE" "–û—à–∏–±–∫–∞ API: $ERROR_MSG" --icon="dialog-error"
    fi
    exit 1
fi


zenity --text-info --title="‚úÖ –û—Ç–≤–µ—Ç $WINDOW_TITLE" --width=$RESPONSE_WIDTH --height=$RESPONSE_HEIGHT \
    --ok-label="üëç –ì–æ—Ç–æ–≤–æ" --window-icon="applications-development" <<< "$ANSWER"